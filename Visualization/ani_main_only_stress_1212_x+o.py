from cProfile import label
import matplotlib.pyplot as plt
from matplotlib import animation
import numpy as np
from matplotlib import patches
from matplotlib import animation, gridspec
from sklearn import preprocessing

# from ani_integrate_test3_meet import STATE_HISTORY

# エージェントの移動の様子を可視化します
# 参考URL http://louistiao.me/posts/notebooks/embedding-matplotlib-animations-in-jupyter-notebooks/

# animation_Edit.py の整理ver.
# ani_integrate_test3_main.py の整理ver.

class Anim():
    
    def __init__(self, STATE_HISTORY, stress):

        self.state_history = STATE_HISTORY
        self.stress = stress
        # self.fig = plt.figure(figsize=(7, 7))
        self.fig = plt.figure(figsize=(8, 8.5))
        self.ax = plt.gca()
        self.ims = []

        # self.gs = gridspec.GridSpec(2, 2, height_ratios=(1, 1))
        # self.gs = gridspec.GridSpec(2, 2, height_ratios=(3, 1))
        self.gs = gridspec.GridSpec(3, 3) # , height_ratios=(1, 1))
        # self.ax = [plt.subplot(self.gs[0, 2]), plt.subplot(self.gs[0, 1]), plt.subplot(self.gs[1, 1])]
        ss1 = self.gs.new_subplotspec((0, 0), rowspan=3,colspan=1)
        ss2 = self.gs.new_subplotspec((1, 1), rowspan=1,colspan=2)
        self.ax = [plt.subplot(ss1), plt.subplot(ss2)] # , plt.subplot(ss3), plt.subplot(ss4), plt.subplot(ss5)]
        "-----------------------------------------------------"
        # グラフデータの初期化
        self.T = []
        # Statas数推移
        self.Stress_List= []
        self.im = []
        self.TEST = []
        self.legend_flag = True

    def view_plot_text(self):

        import matplotlib.pyplot as plt

        
        import numpy as np
        from PIL import Image

        # plt.plot([20.5], [20.5], marker="s", color='black', markersize = 520, alpha = 0.8)
        self.ax[0].plot([20.5], [20.5], marker="s", color='black', markersize = 520, alpha = 0.8)

        # 描画範囲の設定と目盛りを消す設定
        self.ax[0].set_xlim(-7.5, 41.5)
        self.ax[0].set_ylim(-10.5, 51.5)
        self.ax[0].tick_params(axis='both', which='both', bottom='off', top='off',
                        labelbottom='off', right='off', left='off', labelleft='off')
        # self.ax[0].legend()
        test = [[22, 8], [23, 8], [24, 8], [25, 8], [26, 8], [27, 8], [21, 8], [20, 8], [19, 8], [18, 8], [17, 8], [16, 8], [15, 8], [14, 8], [13, 8], [12, 8], [11, 8], [10, 8], [9, 8], [8, 8], [7, 8], [6, 8], [5, 8], [4, 8], [3, 8], [2, 8], [1, 8], [0, 8]]

        # 格子状
        # test = [[22, 8], [23, 8], [23, 9], [23, 7], [23, 6], [24, 6], [22, 6], [21, 6], [23, 5], [23, 4], [24, 4], [25, 4], [26, 4], [22, 4], [21, 4], [20, 4], [19, 4], [18, 4], [18, 5], [18, 6], [17, 4], [18, 3], [18, 2], [17, 2], [16, 2], [15, 2], [14, 2], [13, 2], [12, 2], [13, 3], [13, 1], [13, 0], [12, 0], [11, 0], [10, 0], [14, 0], [15, 0], [16, 0], [9, 0], [8, 0], [7, 0], [11, 2], [10, 2], [9, 2], [8, 2], [7, 2], [6, 2], [5, 2], [6, 1], [6, 3], [6, 4], [6, 5], [5, 4], [4, 4], [3, 4], [2, 4], [6, 6], [7, 6], [8, 6], [6, 7], [6, 8], [7, 8], [6, 9], [6, 10], [8, 8], [9, 8], [10, 8], [11, 8], [12, 8], [13, 8], [14, 8], [13, 9], [13, 10], [12, 10], [11, 10], [10, 10], [9, 10], [8, 10], [7, 10], [5, 8], [13, 7], [4, 8], [3, 8], [2, 8], [1, 8], [0, 8], [0, 7], [0, 9], [0, 10], [1, 10], [2, 10], [3, 10], [4, 10], [5, 10], [13, 6], [14, 6], [15, 6], [16, 6], [17, 6], [18, 7], [18, 8], [19, 8], [17, 8], [16, 8], [15, 8], [18, 9], [18, 10], [19, 10], [17, 10], [16, 10], [15, 10], [14, 10], [18, 11], [20, 10], [21, 10], [22, 10], [23, 10], [23, 11], [23, 12], [22, 12], [23, 13], [24, 12], [25, 12], [26, 12], [24, 10], [21, 12], [23, 14], [20, 12], [19, 12], [18, 12], [18, 13], [18, 14], [18, 15], [18, 16], [19, 16], [20, 16], [21, 16], [17, 16], [22, 16], [23, 16], [24, 16], [25, 16], [23, 15], [25, 10], [24, 8], [25, 8], [21, 8], [26, 10], [22, 14], [21, 14], [24, 14], [25, 14], [26, 14], [27, 14], [28, 14], [28, 15], [20, 14], [17, 12], [19, 14], [17, 14], [16, 14], [15, 14], [14, 14], [13, 14], [13, 15], [13, 13], [13, 12], [14, 12], [13, 11], [12, 12], [11, 12], [20, 8], [19, 6], [28, 13], [25, 6], [26, 6], [27, 6], [28, 6], [28, 7], [28, 5], [28, 4], [27, 4], [23, 3], [23, 2], [22, 2], [21, 2], [20, 2], [23, 1], [24, 2], [23, 0], [22, 0], [21, 0], [20, 0], [24, 0], [25, 0], [25, 2], [26, 2], [27, 2], [28, 2], [28, 1], [28, 3], [28, 8], [26, 8], [27, 8], [27, 10], [28, 10], [28, 11], [28, 12], [27, 12], [28, 16], [27, 16], [26, 16], [28, 9], [12, 6], [13, 5], [13, 4], [14, 4], [15, 4], [12, 4], [5, 6], [9, 6], [10, 6], [11, 6], [12, 14], [13, 16], [14, 16], [15, 16], [15, 12], [12, 16], [11, 16], [10, 16], [9, 16], [8, 16], [10, 12], [9, 12], [8, 12], [7, 12], [16, 4], [11, 4], [10, 4], [9, 4], [8, 4], [7, 4], [19, 2], [18, 1], [18, 0], [17, 0], [19, 0], [6, 0], [5, 0], [4, 0], [3, 0], [28, 0], [20, 6], [1, 4], [0, 4], [0, 3], [0, 2], [1, 2], [2, 2], [3, 2], [4, 2], [0, 1], [0, 5], [0, 6], [1, 6], [2, 6], [3, 6], [4, 6], [16, 12], [6, 12], [6, 13], [6, 14], [7, 14], [5, 14], [6, 15], [8, 14], [9, 14], [10, 14], [11, 14], [6, 11], [0, 11], [0, 12], [1, 12], [2, 12], [3, 12], [4, 12], [5, 12], [0, 13], [0, 0], [1, 0], [2, 0], [27, 0], [26, 0], [16, 16], [0, 14], [0, 15], [1, 14], [2, 14], [3, 14], [4, 14], [0, 16], [6, 16], [7, 16], [5, 16], [4, 16], [3, 16], [2, 16], [1, 16]]
        for t in range(len(test)):


            state = test[t]
            y = 46-(state[0] + state[0] + 0.5) # 14.5)
            x = state[1] + state[1] + 0.5

            self.ax[0].plot([x], [y], marker="s", color='grey', markersize = 18)

        LandMark = [[27, 8], [22, 8], [18, 8], [13, 8], [9, 8], [5, 8],  [0, 8]]
        "1106"
        LandMark = [[23, 8], [18, 8], [12, 8], [5, 8]] # , [5, 8],  [0, 8]]
        "マス固定"
        LandMark = [[22, 8], [17, 8], [12, 8], [7, 8], [2, 8]]
        
        "xのみ"
        LandMark = [[27, 8], [25, 8], [22, 8], [19, 8], [16, 8], [13, 8], [10, 8], [7, 8], [4, 8]]
        LandMark = [[24, 8], [21, 8], [18, 8], [15, 8], [12, 8], [9, 8], [6, 8], [3, 8], [0, 8]]


        # self.ax[0].plot([20.5], [20.5], marker="s", color='black', markersize = 520, alpha = 0.8)
        # for t in range(len(LandMark)):
        #     state = LandMark[t]
        #     y = 46-(state[0] + state[0] + 0.5) # 14.5)
        #     x = state[1] + state[1] + 0.5

        #     if state == [0, 8]:
        #         # self.ax[0].plot([x], [y], marker="s", color='orange', markersize = 18, alpha = 0.5)
        #         # self.ax[0].plot([x], [y], marker="s", color='red', markersize = 18, alpha = 0.5)
        #         pass

        #     if state == [25, 8] or state == [22, 8]: # [12, 8] or state == [7, 8] or state == [2, 8]:
        #         # self.ax[0].plot([x], [y], marker="s", color='blue', markersize = 18, alpha = 0.5)
        #         self.ax[0].plot([x], [y], marker="s", color='green', markersize = 18, alpha = 0.5)
        #         # pass
        #     elif state == [27, 8]:
        #         pass
            
        #     # 1024
        #     # add 1007
        #     # elif state == [5, 8]: # or state == [9, 8]: # or state == [5, 8]:
        #     #     # self.ax[0].plot([x], [y], marker="s", color='orange', markersize = 18, alpha = 0.5)
        #     #     self.ax[0].plot([x], [y], marker="s", color='blue', markersize = 18, alpha = 0.5)
        #     #     # self.ax[0].plot([x], [y], marker="s", color='blue', markersize = 28, alpha = 0.5)
        #     #     # pass
        #     else:
        #         # self.ax[0].plot([x], [y], marker="s", color='green', markersize = 18, alpha = 0.5)
        #         self.ax[0].plot([x], [y], marker="s", color='blue', markersize = 18, alpha = 0.5)
        
        "n=4"
        for t in range(len(LandMark)):
            state = LandMark[t]
            y = 46-(state[0] + state[0] + 0.5) # 14.5)
            x = state[1] + state[1] + 0.5
            # if state == [13, 8] or state == [10, 8] or state == [7, 8] or state == [4, 8]: # [12, 8] or state == [7, 8] or state == [2, 8]:
            if state == [12, 8] or state == [9, 8] or state == [6, 8] or state == [3, 8]: # or state == [0, 8]:
                self.ax[0].plot([x], [y], marker="s", color='blue', markersize = 18, alpha = 0.5)
            # elif state == [27, 8]:
            elif state == [0, 8]:
                pass
            else:
                self.ax[0].plot([x], [y], marker="s", color='green', markersize = 18, alpha = 0.5)
        "n=3"
        # for t in range(len(LandMark)):
        #     state = LandMark[t]
        #     y = 46-(state[0] + state[0] + 0.5)
        #     x = state[1] + state[1] + 0.5
        #     if state == [15, 8] or state == [12, 8] or state == [9, 8] or state == [6, 8] or state == [3, 8]:
        #         self.ax[0].plot([x], [y], marker="s", color='blue', markersize = 18, alpha = 0.5)
        #     elif state == [0, 8]:
        #         pass
        #     else:
        #         self.ax[0].plot([x], [y], marker="s", color='green', markersize = 18, alpha = 0.5)
        "oooxo"
        # for t in range(len(LandMark)):
        #     state = LandMark[t]
        #     y = 46-(state[0] + state[0] + 0.5)
        #     x = state[1] + state[1] + 0.5
        #     if state == [15, 8] or state == [9, 8] or state == [6, 8] or state == [3, 8]:
        #         self.ax[0].plot([x], [y], marker="s", color='blue', markersize = 18, alpha = 0.5)
        #     elif state == [0, 8]:
        #         pass
        #     else:
        #         self.ax[0].plot([x], [y], marker="s", color='green', markersize = 18, alpha = 0.5)
        "oxoxo"
        # for t in range(len(LandMark)):
        #     state = LandMark[t]
        #     y = 46-(state[0] + state[0] + 0.5)
        #     x = state[1] + state[1] + 0.5
        #     if state == [21, 8] or state == [15, 8] or state == [9, 8] or state == [6, 8] or state == [3, 8]:
        #         self.ax[0].plot([x], [y], marker="s", color='blue', markersize = 18, alpha = 0.5)
        #     elif state == [0, 8]:
        #         pass
        #     else:
        #         self.ax[0].plot([x], [y], marker="s", color='green', markersize = 18, alpha = 0.5)

                
    def move_history(self):

        OVER_CAPACITY = 1.0

        for t in range(len(self.stress)): # state_history)): # フレームごとの描画内容

            self.T.append(t)
            self.im = []

            self.Stress_List.append(self.stress[t])
            self.im += (self.ax[1].plot(self.T, self.Stress_List, color="orange", alpha=0.7))

            state = self.state_history[t]  # 現在の場所を描く

            try:
                prev_state = self.state_history[t-1]
            except:
                pass
            

            if state[1] != 0:
                y = 46-(state[0] + state[0] + 0.5) # 14.5)
                x = state[1] + state[1] + 0.5
            else:
                x = 0.5
                y = 46-(state[0] + state[0] + 0.5) # 14.5)
                
            try:
                if state == prev_state:
                    
                    if state[0] == prev_state[0]:
                        # self.im += self.ax[0].plot(x, y, marker="s", color='y', markersize = 18, alpha = 0.5)
                        self.im += self.ax[0].plot(x, y, marker="o", color='y', markersize = 8)
                    else:
                        # self.im += self.ax[0].plot(x, y, marker="o", color='r', markersize = 15, alpha = 0.5)
                        self.im += self.ax[0].plot(x, y, marker="o", color='r', markersize = 8)

                   
                else:
                    # self.im += self.ax[0].plot(x, y, marker="o", color='r', markersize = 15, alpha = 0.5)
                    self.im += self.ax[0].plot(x, y, marker="o", color='r', markersize = 8)
            except:
                print("エラー(初回)")
                # self.im += self.ax[0].plot(x, y, marker="s", color='r', markersize = 15, alpha = 0.5)
                self.im += self.ax[0].plot(x, y, marker="o", color='r', markersize = 8)
            self.ims.append(self.im)
            
            if t == 0:
                self.ims.append(self.im)

            #描画設定
            if self.legend_flag:  # 一回のみ凡例を描画
                self.ax[0].set_title("Sim Environment")
                # self.ax[1].axhline(OVER_CAPACITY, ls = "--", color = "black", label = "×1 standard line")
                self.ax[1].axhline(2, ls = "--", color = "red", label = "×2 (Threshold)")
                # self.ax[1].axhline(OVER_CAPACITY, ls = "--", color = "black", label = "×1 standard")
                self.ax[1].axhline(0, ls = "--", color = "black", label = "stress free")
                self.ax[0].scatter(0, -20, marker="o", color='r', label = "Agent")
                # self.ax[0].scatter(0, -20, marker="s", color='green', label="Node")
                self.ax[0].scatter(0, -20, marker="s", color='green', label="Node ◯", alpha=0.5)
                self.ax[0].scatter(0, -20, marker="s", color='blue', label="Node ×", alpha=0.5)
                self.ax[0].scatter(0, -20, marker="s", color='grey', label="Path", alpha=0.5)
                # self.ax[1].plot(self.T, self.Stress_List, color="orange", alpha=0.7, label = "Stress Value by Agent")
                self.ax[1].plot(self.T, self.Stress_List, color="orange", alpha=0.7, label = "Stress")
                self.legend_flag = False

            self.fig.savefig(f"/Users/ken/Desktop/src/practice/1107_meeting/fig2/img{t}.png")
            # self.ax[0].plot(x, y, marker="o", color='r', markersize = 8)
            # self.ax[0].close()

            
    def view_anim(self): #　初期化関数とフレームごとの描画関数を用いて動画を作成する
        self.anim = animation.ArtistAnimation(self.fig, self.ims, interval=350, repeat = True) # False)
        # self.anim = animation.ArtistAnimation(self.fig, self.ims, interval=15, repeat = True)
        # self.anim = animation.ArtistAnimation(self.fig, self.ims, interval=250, repeat = True)
        # self.ani = animation.ArtistAnimation(self.fig, self.ims, interval=250)
        # plt.legend(loc='lower right')
        # plt.legend(loc='center')
        self.ax[0].legend(loc='upper right')
        self.ax[1].legend(loc='lower right')
        # self.ax[2].legend(loc='upper right')
        # self.ax[3].legend(loc='upper right')
        # self.ax[4].legend(loc='lower right')
        
        "1120 meeting Reluを見やすくするために追加"
        # self.ax[1].set_ylim(-0.1, 1.5)
        self.ax[1].set_xlim(-1, 50)
        plt.show()
        return True


if __name__ == "__main__":
    
   
   
   
   
    "ooooxxxx-4-*1"
    STATE_HISTORY = [[27, 8], [26, 8], [25, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [20, 8], [19, 8], [18, 8], [18, 8], [17, 8], [16, 8], [15, 8], [15, 8], [14, 8], [13, 8], [12, 8], [12, 8], [11, 8], [10, 8], [9, 8], [9, 8], [8, 8], [7, 8], [6, 8], [6, 8], [5, 8], [4, 8], [3, 8], [3, 8], [3, 8], [4, 8], [5, 8], [6, 8], [7, 8], [8, 8], [9, 8], [10, 8], [11, 8], [12, 8], [13, 8], [14, 8], [15, 8], [15, 8], [15, 8], [15, 8], [16, 8], [17, 8], [18, 8], [18, 8], [18, 8], [18, 8], [19, 8], [20, 8], [21, 8], [21, 8], [21, 8], [21, 8], [22, 8], [23, 8], [24, 8], [24, 8], [24, 8], [24, 8]]
    stress = [0.0, 0.333, 0.666, 0.9990000000000001, 0.2, 0.42200000000000004, 0.6440000000000001, 0.8660000000000001, 0.3, 0.4665, 0.633, 0.7995, 0.3, 0.4332, 0.5664, 0.6996, 0.3, 0.411, 0.522, 0.833, 0.5, 0.6902857142857143, 0.8805714285714286, 1.404190476190476, 0.8333333333333331, 1.0830833333333332, 1.3328333333333333, 2.011154761904762, 1.2619047619047619, 1.557904761904762, 1.853904761904762, 2.6499047619047618, 1.7619047619047619, 2.094904761904762, 2.094904761904762, 2.094904761904762, 2.094904761904762, 2.094904761904762, 2.094904761904762, 2.094904761904762, 2.094904761904762, 2.094904761904762, 2.094904761904762, 2.094904761904762, 2.094904761904762, 1.394904761904762, 1.394904761904762, 2.005, 2.005, 2.005, 2.005, 1.305, 1.305, 2.406, 2.406, 2.406, 2.406, 1.7060000000000002, 1.7060000000000002, 2.293, 2.293, 2.293, 2.293, 1.493, 1.493, 2.439, 2.439]
    "oooxxx-3-*1"
    # STATE_HISTORY = [[27, 8], [26, 8], [25, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [20, 8], [19, 8], [18, 8], [18, 8], [17, 8], [16, 8], [15, 8], [15, 8], [14, 8], [13, 8], [12, 8], [12, 8], [11, 8], [10, 8], [9, 8], [9, 8], [8, 8], [8, 8], [9, 8], [10, 8], [11, 8], [12, 8], [13, 8], [14, 8], [15, 8], [16, 8], [17, 8], [18, 8], [18, 8], [18, 8], [18, 8], [19, 8], [20, 8], [21, 8], [21, 8], [21, 8], [21, 8], [22, 8], [23, 8], [24, 8], [24, 8], [24, 8], [24, 8]]
    # stress = [0.0, 0.333, 0.666, 0.9990000000000001, 0.2, 0.42200000000000004, 0.6440000000000001, 0.8660000000000001, 0.3, 0.4665, 0.633, 0.7995, 0.3, 0.4332, 0.5664, 0.9496, 0.55, 0.772, 0.994, 1.616, 0.95, 1.2354285714285713, 1.520857142857143, 2.3062857142857145, 1.4500000000000002, 1.7830000000000001, 2.116, 2.116, 2.116, 2.116, 2.116, 2.116, 2.116, 2.116, 2.116, 2.116, 1.4160000000000001, 1.4160000000000001, 2.204, 2.204, 2.204, 2.204, 1.5040000000000002, 1.5040000000000002, 2.343, 2.343, 2.343, 2.343, 1.543, 1.543, 2.478, 2.478]
    # "ooxx-2-*1"
    # # STATE_HISTORY = [[27, 8], [26, 8], [25, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [20, 8], [19, 8], [18, 8], [18, 8], [17, 8], [16, 8], [15, 8], [15, 8], [14, 8], [13, 8], [12, 8], [12, 8], [12, 8], [13, 8], [14, 8], [15, 8], [16, 8], [17, 8], [18, 8], [19, 8], [20, 8], [21, 8], [22, 8], [23, 8], [24, 8], [24, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [21, 8], [21, 8]]
    # # stress = [0.0, 0.333, 0.666, 0.9990000000000001, 0.2, 0.42200000000000004, 0.6440000000000001, 0.8660000000000001, 0.3, 0.4665, 0.633, 1.1328333333333334, 0.6333333333333333, 0.8997333333333333, 1.1661333333333332, 1.9325333333333332, 1.133333333333333, 1.466333333333333, 1.799333333333333, 2.732333333333333, 1.733333333333333, 2.1139047619047613, 2.1139047619047613, 2.1139047619047613, 2.1139047619047613, 2.1139047619047613, 2.1139047619047613, 2.1139047619047613, 2.1139047619047613, 2.1139047619047613, 2.1139047619047613, 2.1139047619047613, 2.1139047619047613, 1.3139047619047612, 1.3139047619047612, 2.285, 2.285, 2.285, 2.285, 1.5850000000000002, 1.5850000000000002, 2.46, 2.46]
    # "ox-1-*1"
    # # STATE_HISTORY = [[27, 8], [26, 8], [25, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [20, 8], [19, 8], [18, 8], [18, 8], [17, 8], [17, 8], [18, 8], [19, 8], [20, 8], [21, 8], [22, 8], [23, 8], [24, 8], [24, 8], [24, 8], [24, 8]]
    # # stress = [0.0, 0.333, 0.666, 0.9990000000000001, 0.2, 0.42200000000000004, 0.6440000000000001, 1.366, 0.7, 1.033, 1.3659999999999999, 2.3656666666666664, 1.3666666666666663, 1.7662666666666662, 2.165866666666666, 2.165866666666666, 2.165866666666666, 2.165866666666666, 2.165866666666666, 2.165866666666666, 2.165866666666666, 1.3658666666666661, 1.3658666666666661, 2.011, 2.011]
    "ooooxxxx-4-row"
    # STATE_HISTORY = [[27, 8], [26, 8], [25, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [20, 8], [19, 8], [18, 8], [18, 8], [17, 8], [16, 8], [15, 8], [15, 8], [14, 8], [13, 8], [12, 8], [12, 8], [11, 8], [10, 8], [9, 8], [10, 8], [11, 8], [12, 8], [13, 8], [14, 8], [15, 8], [15, 8], [15, 8], [15, 8], [16, 8], [17, 8], [18, 8], [18, 8], [18, 8], [18, 8], [19, 8], [20, 8], [21, 8], [21, 8], [21, 8], [21, 8], [22, 8], [23, 8], [24, 8], [24, 8], [24, 8], [24, 8]]
    # stress = [0.0, 0.333, 0.666, 0.9990000000000001, 0.2, 0.42200000000000004, 0.6440000000000001, 0.8660000000000001, 0.3, 0.4665, 0.633, 0.7995, 0.3, 0.4332, 0.5664, 0.6996, 0.3, 0.411, 0.522, 1.633, 1.3, 1.4902857142857142, 1.6805714285714286, 2.870857142857143, 2.3000000000000003, 2.3000000000000003, 2.3000000000000003, 2.3000000000000003, 2.3000000000000003, 1.6000000000000003, 1.6000000000000003, 2.489, 2.489, 2.489, 2.489, 1.789, 1.789, 2.084, 2.084, 2.084, 2.084, 1.3840000000000001, 1.3840000000000001, 2.415, 2.415, 2.415, 2.415, 1.615, 1.615, 2.081, 2.081]
    "oooxxx-3-row"
    # STATE_HISTORY = [[27, 8], [26, 8], [25, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [20, 8], [19, 8], [18, 8], [18, 8], [17, 8], [16, 8], [15, 8], [15, 8], [14, 8], [13, 8], [12, 8], [13, 8], [14, 8], [15, 8], [16, 8], [17, 8], [18, 8], [18, 8], [18, 8], [18, 8], [19, 8], [20, 8], [21, 8], [21, 8], [21, 8], [21, 8], [22, 8], [23, 8], [24, 8], [24, 8], [24, 8], [24, 8]]
    # stress = [0.0, 0.333, 0.666, 0.9990000000000001, 0.2, 0.42200000000000004, 0.6440000000000001, 0.8660000000000001, 0.3, 0.4665, 0.633, 0.7995, 0.3, 0.4332, 0.5664, 1.6996, 1.3, 1.522, 1.744, 2.966, 2.3, 2.3, 2.3, 2.3, 2.3, 1.5999999999999999, 1.5999999999999999, 2.342, 2.342, 2.342, 2.342, 1.6420000000000001, 1.6420000000000001, 2.354, 2.354, 2.354, 2.354, 1.554, 1.554, 2.012, 2.012]
    # "ooxx-2-row"
    # # STATE_HISTORY = [[27, 8], [26, 8], [25, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [20, 8], [19, 8], [18, 8], [18, 8], [17, 8], [16, 8], [15, 8], [16, 8], [17, 8], [18, 8], [19, 8], [20, 8], [21, 8], [22, 8], [23, 8], [24, 8], [24, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [21, 8], [21, 8]]
    # # stress = [0.0, 0.333, 0.666, 0.9990000000000001, 0.2, 0.42200000000000004, 0.6440000000000001, 0.8660000000000001, 0.3, 0.4665, 0.633, 1.7995, 1.3, 1.5664, 1.8328, 3.0992, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3, 1.4999999999999998, 1.4999999999999998, 2.027, 2.027, 2.027, 2.027, 1.3270000000000002, 1.3270000000000002, 2.468, 2.468]
    # "ox-1-row"
    # # STATE_HISTORY = [[27, 8], [26, 8], [25, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [20, 8], [19, 8], [18, 8], [19, 8], [20, 8], [21, 8], [22, 8], [23, 8], [24, 8], [24, 8], [24, 8], [24, 8]]
    # # stress = [0.0, 0.333, 0.666, 0.9990000000000001, 0.2, 0.42200000000000004, 0.6440000000000001, 1.866, 1.2, 1.533, 1.8659999999999999, 3.199, 2.1999999999999997, 2.1999999999999997, 2.1999999999999997, 2.1999999999999997, 2.1999999999999997, 1.3999999999999997, 1.3999999999999997, 2.147, 2.147]

    # "4-*2"
    # # STATE_HISTORY = [[27, 8], [26, 8], [25, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [20, 8], [19, 8], [18, 8], [18, 8], [17, 8], [16, 8], [15, 8], [15, 8], [14, 8], [13, 8], [12, 8], [12, 8], [11, 8], [10, 8], [9, 8], [9, 8], [8, 8], [7, 8], [6, 8], [7, 8], [8, 8], [9, 8], [10, 8], [11, 8], [12, 8], [13, 8], [14, 8], [15, 8], [15, 8], [15, 8], [15, 8], [16, 8], [17, 8], [18, 8], [18, 8], [18, 8], [18, 8], [19, 8], [20, 8], [21, 8], [21, 8], [21, 8], [21, 8], [22, 8], [23, 8], [24, 8], [24, 8], [24, 8], [24, 8]]
    # # stress = [0.0, 0.333, 0.666, 0.9990000000000001, 0.2, 0.42200000000000004, 0.6440000000000001, 0.8660000000000001, 0.3, 0.4665, 0.633, 0.7995, 0.3, 0.4332, 0.5664, 0.6996, 0.3, 0.411, 0.522, 1.033, 0.7, 0.8902857142857142, 1.0805714285714285, 1.9375238095238094, 1.3666666666666667, 1.6164166666666668, 1.866166666666667, 2.9730595238095243, 2.2238095238095243, 2.2238095238095243, 2.2238095238095243, 2.2238095238095243, 2.2238095238095243, 2.2238095238095243, 2.2238095238095243, 2.2238095238095243, 1.5238095238095244, 1.5238095238095244, 2.291, 2.291, 2.291, 2.291, 1.591, 1.591, 2.365, 2.365, 2.365, 2.365, 1.6650000000000003, 1.6650000000000003, 2.019, 2.019, 2.019, 2.019, 1.219, 1.219, 2.399, 2.399]
    # "3-*2"
    # # STATE_HISTORY = [[27, 8], [26, 8], [25, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [20, 8], [19, 8], [18, 8], [18, 8], [17, 8], [16, 8], [15, 8], [15, 8], [14, 8], [13, 8], [12, 8], [12, 8], [11, 8], [11, 8], [12, 8], [13, 8], [14, 8], [15, 8], [16, 8], [17, 8], [18, 8], [18, 8], [18, 8], [18, 8], [19, 8], [20, 8], [21, 8], [21, 8], [21, 8], [21, 8], [22, 8], [23, 8], [24, 8], [24, 8], [24, 8], [24, 8]]
    # # stress = [0.0, 0.333, 0.666, 0.9990000000000001, 0.2, 0.42200000000000004, 0.6440000000000001, 0.8660000000000001, 0.3, 0.4665, 0.633, 0.7995, 0.3, 0.4332, 0.5664, 1.1996, 0.8, 1.022, 1.244, 2.266, 1.5999999999999999, 1.8854285714285712, 2.170857142857143, 2.170857142857143, 2.170857142857143, 2.170857142857143, 2.170857142857143, 2.170857142857143, 2.170857142857143, 1.4708571428571429, 1.4708571428571429, 2.0, 2.0, 2.0, 2.0, 1.3, 1.3, 2.427, 2.427, 2.427, 2.427, 1.627, 1.627, 2.197, 2.197]
    # "2-*2"
    # # STATE_HISTORY = [[27, 8], [26, 8], [25, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [20, 8], [19, 8], [18, 8], [18, 8], [17, 8], [16, 8], [15, 8], [15, 8], [15, 8], [16, 8], [17, 8], [18, 8], [19, 8], [20, 8], [21, 8], [22, 8], [23, 8], [24, 8], [24, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [21, 8], [21, 8]]
    # # stress = [0.0, 0.333, 0.666, 0.9990000000000001, 0.2, 0.42200000000000004, 0.6440000000000001, 0.8660000000000001, 0.3, 0.4665, 0.633, 1.4661666666666666, 0.9666666666666666, 1.2330666666666665, 1.4994666666666665, 2.7658666666666667, 1.9666666666666666, 2.2996666666666665, 2.2996666666666665, 2.2996666666666665, 2.2996666666666665, 2.2996666666666665, 2.2996666666666665, 2.2996666666666665, 2.2996666666666665, 2.2996666666666665, 1.4996666666666665, 1.4996666666666665, 2.006, 2.006, 2.006, 2.006, 1.3059999999999998, 1.3059999999999998, 2.132, 2.132]
    # "1-*2"
    # # STATE_HISTORY = [[27, 8], [26, 8], [25, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [20, 8], [19, 8], [18, 8], [19, 8], [20, 8], [21, 8], [22, 8], [23, 8], [24, 8], [24, 8], [24, 8], [24, 8]]
    # # stress = [0.0, 0.333, 0.666, 0.9990000000000001, 0.2, 0.42200000000000004, 0.6440000000000001, 1.866, 1.2, 1.533, 1.8659999999999999, 3.532333333333333, 2.5333333333333328, 2.5333333333333328, 2.5333333333333328, 2.5333333333333328, 2.5333333333333328, 1.7333333333333327, 1.7333333333333327, 2.387, 2.387]
    # "3-row*2"
    # # STATE_HISTORY = [[27, 8], [26, 8], [25, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [20, 8], [19, 8], [18, 8], [18, 8], [17, 8], [16, 8], [15, 8], [16, 8], [17, 8], [18, 8], [18, 8], [18, 8], [18, 8], [19, 8], [20, 8], [21, 8], [21, 8], [21, 8], [21, 8], [22, 8], [23, 8], [24, 8], [24, 8], [24, 8], [24, 8]]
    # # stress = [0.0, 0.333, 0.666, 0.9990000000000001, 0.2, 0.42200000000000004, 0.6440000000000001, 0.8660000000000001, 0.3, 0.4665, 0.633, 0.7995, 0.3, 0.4332, 0.5664, 2.6996, 2.3000000000000003, 2.3000000000000003, 1.6000000000000003, 1.6000000000000003, 2.277, 2.277, 2.277, 2.277, 1.5770000000000002, 1.5770000000000002, 2.089, 2.089, 2.089, 2.089, 1.289, 1.289, 2.433, 2.433]

    "oooxo-*1"
    # STATE_HISTORY = [[27, 8], [26, 8], [25, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [20, 8], [19, 8], [18, 8], [18, 8], [17, 8], [16, 8], [15, 8], [15, 8], [14, 8], [13, 8], [12, 8], [12, 8], [11, 8], [10, 8], [9, 8], [9, 8], [8, 8], [8, 8], [9, 8], [10, 8], [11, 8], [12, 8], [13, 8], [14, 8], [15, 8], [16, 8], [17, 8], [18, 8], [18, 8], [18, 8], [18, 8], [19, 8], [20, 8], [21, 8], [21, 8], [21, 8], [21, 8], [22, 8], [23, 8], [24, 8], [24, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [20, 8], [19, 8], [18, 8], [17, 8], [16, 8], [15, 8], [14, 8], [13, 8], [12, 8], [12, 8], [12, 8], [12, 8]]
    # stress = [0.0, 0.333, 0.666, 0.9990000000000001, 0.2, 0.42200000000000004, 0.6440000000000001, 0.8660000000000001, 0.3, 0.4665, 0.633, 0.7995, 0.3, 0.4332, 0.5664, 1.0996000000000001, 0.7000000000000002, 1.1440000000000001, 1.588, 2.032, 0.8, 1.022, 1.244, 1.966, 1.2999999999999998, 1.7439999999999998, 2.1879999999999997, 2.1879999999999997, 2.1879999999999997, 2.1879999999999997, 2.1879999999999997, 2.1879999999999997, 2.1879999999999997, 2.1879999999999997, 2.1879999999999997, 2.1879999999999997, 1.4879999999999998, 1.4879999999999998, 2.386, 2.386, 2.386, 2.386, 1.6860000000000002, 1.6860000000000002, 2.097, 2.097, 2.097, 2.097, 1.297, 1.297, 2.331, 2.331, 2.331, 2.331, 2.331, 2.331, 2.331, 2.331, 2.331, 2.331, 2.331, 2.331, 2.331, 2.1310000000000002, 2.1310000000000002, 2.479, 2.479]
    "oooxo-row"
    # STATE_HISTORY = [[27, 8], [26, 8], [25, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [20, 8], [19, 8], [18, 8], [18, 8], [17, 8], [16, 8], [15, 8], [15, 8], [14, 8], [13, 8], [12, 8], [12, 8], [11, 8], [10, 8], [9, 8], [10, 8], [11, 8], [12, 8], [13, 8], [14, 8], [15, 8], [16, 8], [17, 8], [18, 8], [18, 8], [18, 8], [18, 8], [19, 8], [20, 8], [21, 8], [21, 8], [21, 8], [21, 8], [22, 8], [23, 8], [24, 8], [24, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [20, 8], [19, 8], [18, 8], [17, 8], [16, 8], [15, 8], [14, 8], [13, 8], [12, 8], [12, 8], [12, 8], [12, 8]]
    # stress = [0.0, 0.333, 0.666, 0.9990000000000001, 0.2, 0.42200000000000004, 0.6440000000000001, 0.8660000000000001, 0.3, 0.4665, 0.633, 0.7995, 0.3, 0.4332, 0.5664, 1.6996, 1.3, 1.522, 1.744, 1.966, 1.3, 1.4902857142857142, 1.6805714285714286, 2.870857142857143, 2.3000000000000003, 2.3000000000000003, 2.3000000000000003, 2.3000000000000003, 2.3000000000000003, 2.3000000000000003, 2.3000000000000003, 2.3000000000000003, 1.6000000000000003, 1.6000000000000003, 2.234, 2.234, 2.234, 2.234, 1.534, 1.534, 2.007, 2.007, 2.007, 2.007, 1.207, 1.207, 2.402, 2.402, 2.402, 2.402, 2.402, 2.402, 2.402, 2.402, 2.402, 2.402, 2.402, 2.402, 2.402, 2.702, 2.702, 2.495, 2.495]

    "oxox-*1"
    # STATE_HISTORY = [[27, 8], [26, 8], [25, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [20, 8], [19, 8], [18, 8], [18, 8], [17, 8], [16, 8], [15, 8], [15, 8], [14, 8], [14, 8], [15, 8], [16, 8], [17, 8], [18, 8], [19, 8], [20, 8], [21, 8], [22, 8], [23, 8], [24, 8], [24, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [20, 8], [19, 8], [18, 8], [18, 8], [18, 8], [18, 8]]
    # stress = [0.0, 0.333, 0.666, 0.9990000000000001, 0.1, 0.32200000000000006, 0.544, 1.266, 0.5999999999999999, 1.044, 1.488, 1.932, 0.7, 0.9219999999999999, 1.144, 1.8659999999999999, 1.1999999999999997, 1.6439999999999997, 2.0879999999999996, 2.0879999999999996, 2.0879999999999996, 2.0879999999999996, 2.0879999999999996, 2.0879999999999996, 2.0879999999999996, 2.0879999999999996, 2.0879999999999996, 2.0879999999999996, 1.1879999999999997, 1.1879999999999997, 2.159, 2.159, 2.159, 2.159, 2.159, 2.159, 2.159, 1.8589999999999998, 1.8589999999999998, 2.132, 2.132]
    
    "oxox-row"
    # STATE_HISTORY = [[27, 8], [26, 8], [25, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [20, 8], [19, 8], [18, 8], [18, 8], [17, 8], [16, 8], [15, 8], [16, 8], [17, 8], [18, 8], [19, 8], [20, 8], [21, 8], [22, 8], [23, 8], [24, 8], [24, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [20, 8], [19, 8], [18, 8], [18, 8], [18, 8], [18, 8]]
    # stress = [0.0, 0.333, 0.666, 0.9990000000000001, 0.2, 0.42200000000000004, 0.6440000000000001, 1.866, 1.2, 1.533, 1.8659999999999999, 2.199, 1.3, 1.5664, 1.8328, 3.0992, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3, 1.4999999999999998, 1.4999999999999998, 2.001, 2.001, 2.001, 2.001, 2.001, 2.001, 2.001, 2.301, 2.301, 2.32, 2.32]
    
    # "ooxxo-*1"
    # STATE_HISTORY = [[27, 8], [26, 8], [25, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [20, 8], [19, 8], [18, 8], [18, 8], [17, 8], [16, 8], [15, 8], [15, 8], [14, 8], [13, 8], [12, 8], [12, 8], [11, 8], [10, 8], [9, 8], [9, 8], [8, 8], [8, 8], [9, 8], [10, 8], [11, 8], [12, 8], [13, 8], [14, 8], [15, 8], [16, 8], [17, 8], [18, 8], [19, 8], [20, 8], [21, 8], [22, 8], [23, 8], [24, 8], [24, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [21, 8], [21, 8], [20, 8], [19, 8], [18, 8], [17, 8], [16, 8], [15, 8], [14, 8], [13, 8], [12, 8], [12, 8], [12, 8], [12, 8]]
    # stress = [0.0, 0.333, 0.666, 0.9990000000000001, 0.2, 0.42200000000000004, 0.6440000000000001, 0.8660000000000001, 0.3, 0.4665, 0.633, 1.1328333333333334, 0.6333333333333333, 0.8997333333333333, 1.1661333333333332, 1.9325333333333332, 1.133333333333333, 1.466333333333333, 1.799333333333333, 2.132333333333333, 1.133, 1.4184285714285716, 1.7038571428571432, 2.4892857142857148, 1.6330000000000005, 1.9660000000000004, 2.2990000000000004, 2.2990000000000004, 2.2990000000000004, 2.2990000000000004, 2.2990000000000004, 2.2990000000000004, 2.2990000000000004, 2.2990000000000004, 2.2990000000000004, 2.2990000000000004, 2.2990000000000004, 2.2990000000000004, 2.2990000000000004, 2.2990000000000004, 2.2990000000000004, 2.2990000000000004, 1.4990000000000003, 1.4990000000000003, 2.405, 2.405, 2.405, 2.405, 1.7049999999999998, 1.7049999999999998, 2.103, 2.103, 2.103, 2.103, 2.103, 2.103, 2.103, 2.103, 2.103, 2.103, 2.236, 2.236, 2.017, 2.017]
    # "ooxxo-row"
    # # STATE_HISTORY = [[27, 8], [26, 8], [25, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [20, 8], [19, 8], [18, 8], [18, 8], [17, 8], [16, 8], [15, 8], [16, 8], [17, 8], [18, 8], [19, 8], [20, 8], [21, 8], [22, 8], [23, 8], [24, 8], [24, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [21, 8], [21, 8]]
    # # stress = [0.0, 0.333, 0.666, 0.9990000000000001, 0.2, 0.42200000000000004, 0.6440000000000001, 0.8660000000000001, 0.3, 0.4665, 0.633, 1.7995, 1.3, 1.5664, 1.8328, 3.0992, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3, 2.3, 1.4999999999999998, 1.4999999999999998, 2.279, 2.279, 2.279, 2.279, 1.579, 1.579, 2.482, 2.482]

    "課題"
    # "xoxo-row"
    # STATE_HISTORY = [[27, 8], [26, 8], [25, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [20, 8], [19, 8], [18, 8], [19, 8], [20, 8], [21, 8], [21, 8], [21, 8], [21, 8]]
    # stress = [0.0, 0.333, 0.666, 1.999, 1.0, 1.444, 1.888, 2.332, 1.2, 1.533, 1.8659999999999999, 3.199, 2.1999999999999997, 2.1999999999999997, 2.3999999999999995, 2.3999999999999995, 2.369, 2.369]
    # "xoxo-*1"
    # STATE_HISTORY = [[27, 8], [26, 8], [25, 8], [24, 8], [24, 8], [23, 8], [22, 8], [21, 8], [21, 8], [20, 8], [19, 8], [18, 8], [18, 8], [18, 8], [19, 8], [20, 8], [21, 8], [21, 8], [21, 8], [21, 8]]
    # stress = [0.0, 0.333, 0.666, 1.999, 1.0, 1.444, 1.888, 2.332, 1.2, 1.533, 1.8659999999999999, 2.8656666666666664, 1.8666666666666663, 2.266266666666666, 2.266266666666666, 2.266266666666666, 2.466266666666666, 2.466266666666666, 2.106, 2.106]


    Env_Anim = Anim(STATE_HISTORY, stress)

    print("STATE_HISTORY:{}".format(Env_Anim.state_history))
    print("length:{}".format(len(Env_Anim.state_history)))

    Env_Anim.view_plot_text()
    Env_Anim.move_history()
    Env_Anim.view_anim()

    